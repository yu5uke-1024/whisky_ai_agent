# cloudbuild.yaml

steps:
  # ステップ1: Dockerイメージをビルドし、Artifact Registryにプッシュする
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build and Push'
    args:
      - 'build'
      # $COMMIT_SHAを使って、Gitのコミットごとに一意のタグを付ける
      - '--tag'
      - '${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
      # latestタグも付けておくと、キャッシュや最新版の識別に便利
      - '--tag'
      - '${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:latest'
      # ビルドキャッシュを有効にして、2回目以降のビルドを高速化
      - '--cache-from'
      - '${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:latest'
      - '.' # カレントディレクトリをビルドコンテキストにする
      - '--file'
      - 'Dockerfile'

  # ステップ2: ビルドしたイメージをCloud Runにデプロイする
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      # ステップ1でビルドした、コミットIDでタグ付けされたイメージを指定
      - '--image=${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region=${_DEPLOY_REGION}'
      - '--platform=managed'
      - '--quiet'
      # --- deploy.shにあったデプロイ設定をここに集約 ---
      - '--allow-unauthenticated'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--timeout=300s' # 単位(s)を付けるのが推奨
      - '--max-instances=10'

# ビルドしたイメージを明示的に指定（Cloud Buildが自動的にプッシュしてくれる）
images:
  - '${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
  - '${_AR_HOSTNAME}/${PROJECT_ID}/${_AR_REPOSITORY}/${_SERVICE_NAME}:latest'

# Cloud Buildのオプション
options:
  # デフォルトのログバケットを利用する設定（権限問題の回避）
  # これでもエラーが出る場合は、前回の提案通り専用バケットを指定します
  logging: CLOUD_LOGGING_ONLY

# 置換される変数
substitutions:
  _SERVICE_NAME: 'whisky-line-bot'
  _DEPLOY_REGION: 'asia-northeast1'
  _AR_HOSTNAME: 'asia-northeast1-docker.pkg.dev'
  _AR_REPOSITORY: 'cloud-run-source-deploy'
